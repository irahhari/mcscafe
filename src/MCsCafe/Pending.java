/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package MCsCafe;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.nio.file.StandardOpenOption;
import java.sql.*;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author harig
 */
public class Pending extends javax.swing.JFrame {

    /**
     * Creates new form Postpaid
     */
    public Pending() {
        File file = new File(System.getProperty("user.dir") + "\\lib\\log.txt");
        if (!file.exists()) {
            try {
                file.createNewFile();
            } catch (IOException ex) {
            }
        }
        initComponents();
        Paying.setTransferHandler(null);
        Paying.setEnabled(false);
        Connection con = null;
        Statement stmt = null, qwer = null;
        ResultSet rs = null, tt = null;
        DefaultTableModel model = (DefaultTableModel) Postpaid.getModel();
        try {
            Class.forName("java.sql.Driver");
            con = DriverManager.getConnection("jdbc:mysql://localhost/mcscafe", "mcscafe", "hari");
            stmt = con.createStatement();
            qwer = con.createStatement();
            String query = "SELECT Name, p.Mobile, PurchaseNo, Pending FROM Postpurchase AS p LEFT JOIN Buyer AS u ON p.Mobile=u.Mobile;";
            String total = "SELECT SUM(Pending) FROM Postpurchase;";
            String names = "SELECT * FROM Buyer;";
            rs = stmt.executeQuery(query);
            tt = qwer.executeQuery(total);
            while (rs.next()) {
                model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getString(4)});
            }
            rs = stmt.executeQuery(names);
            while (rs.next()) {
                SearchMobile.addItem(rs.getString(1) + ", " + rs.getString(2));
            }
            SearchMobile.setSelectedIndex(-1);
            tt.next();
            jLabel3.setText("" + tt.getInt(1));
        } catch (ClassNotFoundException | SQLException e) {
            try {
                Files.write(Paths.get(System.getProperty("user.dir") + "\\lib\\log.txt"), LoginPage.encrypt(new java.util.Date(System.currentTimeMillis()).toString()
                        + " Pending:64:Pending\n" + e.toString() + "\n\n").getBytes(), StandardOpenOption.APPEND);
            } catch (IOException ex) {
            }
        } finally {
            if (con != null) {
                try {
                    con.close();
                } catch (SQLException ex) {

                }
            }
            if (stmt != null) {
                try {
                    stmt.close();
                } catch (SQLException ex) {

                }
            }
            if (qwer != null) {
                try {
                    qwer.close();
                } catch (SQLException ex) {

                }
            }
            if (rs != null) {
                try {
                    rs.close();
                } catch (SQLException ex) {

                }
            }
            if (tt != null) {
                try {
                    tt.close();
                } catch (SQLException ex) {

                }
            }
        }
    }

    public Pending(String string) {
        this();
        SearchMobile.setSelectedItem(string);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Postpaid = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        Paying = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        Pay = new javax.swing.JButton();
        Cancel = new javax.swing.JButton();
        jLabel15 = new javax.swing.JLabel();
        Menu = new javax.swing.JButton();
        SearchMobile = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        Name = new javax.swing.JTextField();
        Mobile = new javax.swing.JTextField();
        Date = new javax.swing.JTextField();
        Outstanding = new javax.swing.JTextField();
        Final = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("Pending Purchase | MC's Caf√©");

        jLabel1.setText("Pending Purchase Payment");

        Postpaid.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Mobile Number", "Billl Date", "Pending"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        Postpaid.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PostpaidMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Postpaid);

        jLabel2.setText("Total Pending");

        jLabel4.setText("Name");

        jLabel8.setText("Mobile");

        jLabel10.setText("Pending");

        Paying.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PayingKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                PayingKeyTyped(evt);
            }
        });

        jLabel13.setText("Final Pending");

        Pay.setMnemonic('P');
        Pay.setText("Pay");
        Pay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PayActionPerformed(evt);
            }
        });

        Cancel.setMnemonic('C');
        Cancel.setText("Cancel");
        Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CancelActionPerformed(evt);
            }
        });

        jLabel15.setText("Choose the Purchaser");

        Menu.setMnemonic('M');
        Menu.setText("Back to Menu");
        Menu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuActionPerformed(evt);
            }
        });

        SearchMobile.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                SearchMobileItemStateChanged(evt);
            }
        });

        jLabel5.setText("Paying");

        jLabel9.setText("Date");

        Name.setEditable(false);
        Name.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Name.setEnabled(false);

        Mobile.setEditable(false);
        Mobile.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Mobile.setEnabled(false);

        Date.setEditable(false);
        Date.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Date.setEnabled(false);

        Outstanding.setEditable(false);
        Outstanding.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Outstanding.setEnabled(false);

        Final.setEditable(false);
        Final.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        Final.setEnabled(false);

        jLabel3.setEditable(false);
        jLabel3.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jLabel3.setEnabled(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel10)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGap(97, 97, 97)
                                    .addComponent(Cancel))
                                .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(Mobile, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(Outstanding, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel13)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Final, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Paying, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(Pay)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Menu)
                .addGap(34, 34, 34))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(44, 45, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(133, 133, 133))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel15)
                        .addGap(18, 18, 18)
                        .addComponent(SearchMobile, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(38, 38, 38))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(SearchMobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(Name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Mobile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(Date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Paying, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(Outstanding, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Final, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Pay)
                    .addComponent(Cancel)
                    .addComponent(Menu))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void PostpaidMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PostpaidMouseClicked
        // TODO add your handling code here:
        DefaultTableModel model = (DefaultTableModel) Postpaid.getModel();
        int row = Postpaid.convertRowIndexToModel(Postpaid.getSelectedRow());
        Name.setText(model.getValueAt(row, 0).toString());
        Mobile.setText(model.getValueAt(row, 1).toString());
        Date.setText(model.getValueAt(row, 2).toString());
        Outstanding.setText(model.getValueAt(row, 3).toString());
        Paying.setEnabled(true);
    }//GEN-LAST:event_PostpaidMouseClicked

    private void PayingKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PayingKeyReleased
        // TODO add your handling code here:
        int outstanding = Integer.parseInt(Outstanding.getText()), paying;
        try {
            paying = Integer.parseInt(Paying.getText());
        } catch (NumberFormatException e) {
            paying = 0;
        }

        if (!"".equals(Paying.getText())) {
            Final.setText(outstanding - paying + "");
        } else {
            Final.setText("");
        }
    }//GEN-LAST:event_PayingKeyReleased

    private void PayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PayActionPerformed
        // TODO add your handling code here:
        if (Paying.getText().length() > 0) {
            int outstanding = Integer.parseInt(Outstanding.getText());
            int paying = Integer.parseInt(Paying.getText());
            Connection con = null;
            Statement stmt = null;
            try {
                Class.forName("java.sql.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/mcscafe", "mcscafe", "hari");
                stmt = con.createStatement();
                String query;
                if (outstanding - paying == 0) {
                    query = "DELETE FROM Postpurchase WHERE Mobile = " + Mobile.getText() + ";";
                    stmt.executeUpdate(query);
                } else {
                    query = "UPDATE Postpurchase SET Pending = Pending - " + paying + " WHERE Mobile = " + Mobile.getText() + ";";
                    stmt.executeUpdate(query);
                }
            } catch (ClassNotFoundException | SQLException e) {
                try {
                    Files.write(Paths.get(System.getProperty("user.dir") + "\\lib\\log.txt"), LoginPage.encrypt(new java.util.Date(System.currentTimeMillis()).toString()
                            + " Pending:427:PayctionPerformed\n" + e.toString() + "\n\n").getBytes(), StandardOpenOption.APPEND);
                } catch (IOException ex) {
                }
            } finally {
                if (con != null) {
                    try {
                        con.close();
                    } catch (SQLException ex) {
                    }
                }
                if (stmt != null) {
                    try {
                        stmt.close();
                    } catch (SQLException ex) {
                    }
                }
            }
            Cancel.doClick();
        } else {
            JOptionPane.showMessageDialog(this, "All inputs are required", "Enter all inputs", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_PayActionPerformed

    private void CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CancelActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new Pending().setVisible(true);
    }//GEN-LAST:event_CancelActionPerformed

    private void PayingKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PayingKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();
        if (!(c >= 48 && c <= 57)) {
            evt.consume();
        }
        int outstanding = Integer.parseInt(Outstanding.getText()), paying;
        try {
            if ('0' <= c && c <= '9') {
                paying = Integer.parseInt(Paying.getText() + c);
            } else {
                paying = Integer.parseInt(Paying.getText());
            }
        } catch (NumberFormatException e) {
            paying = 0;
        }
        if (paying > outstanding) {
            evt.consume();
        }
    }//GEN-LAST:event_PayingKeyTyped

    private void MenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuActionPerformed
        // TODO add your handling code here:
        new MenuPage().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_MenuActionPerformed

    private void SearchMobileItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_SearchMobileItemStateChanged
        // TODO add your handling code here:
        if (evt.getStateChange() == 1) {

            String cb = (String) SearchMobile.getSelectedItem(), mobile;

            mobile = cb.substring(cb.length() - 10);
            Connection con = null;
            Statement stmt = null;
            ResultSet rs = null;
            DefaultTableModel model = (DefaultTableModel) Postpaid.getModel();
            model.setRowCount(0);
            try {
                Class.forName("java.sql.Driver");
                con = DriverManager.getConnection("jdbc:mysql://localhost/mcscafe", "mcscafe", "hari");
                stmt = con.createStatement();
                String query = "SELECT Name, p.Mobile, PurchaseNo, Pending FROM Postpurchase AS p LEFT JOIN Buyer AS u ON p.Mobile=u.Mobile WHERE p.Mobile = " + mobile + ";";
                rs = stmt.executeQuery(query);
                while (rs.next()) {
                    model.addRow(new Object[]{rs.getString(1), rs.getString(2), rs.getString(3), rs.getInt(4)});
                }
            } catch (ClassNotFoundException | SQLException e) {
                try {
                    Files.write(Paths.get(System.getProperty("user.dir") + "\\lib\\log.txt"), LoginPage.encrypt(new java.util.Date(System.currentTimeMillis()).toString()
                            + " Pending:507:SearchActionPerformed\n" + e.toString() + "\n\n").getBytes(), StandardOpenOption.APPEND);
                } catch (IOException ex) {
                }
            } finally {
                if (con != null) {
                    try {
                        con.close();
                    } catch (SQLException ex) {
                    }
                }
                if (stmt != null) {
                    try {
                        stmt.close();
                    } catch (SQLException ex) {
                    }
                }
                if (rs != null) {
                    try {
                        rs.close();
                    } catch (SQLException ex) {
                    }
                }
            }
            Name.setText("");
            Date.setText("");
            Mobile.setText("");
            Outstanding.setText("");
            Paying.setText("");
            Final.setText("");
            Paying.setEnabled(false);
        }
    }//GEN-LAST:event_SearchMobileItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            try {
                Files.write(Paths.get(System.getProperty("user.dir") + "\\lib\\log.txt"), LoginPage.encrypt(new java.util.Date(System.currentTimeMillis()).toString()
                        + " Pending:559:main\n" + ex.toString() + "\n\n").getBytes(), StandardOpenOption.APPEND);
            } catch (IOException e) {
            }
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new Pending().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Cancel;
    private javax.swing.JTextField Date;
    private javax.swing.JTextField Final;
    private javax.swing.JButton Menu;
    private javax.swing.JTextField Mobile;
    private javax.swing.JTextField Name;
    private javax.swing.JTextField Outstanding;
    private javax.swing.JButton Pay;
    private javax.swing.JTextField Paying;
    private javax.swing.JTable Postpaid;
    private javax.swing.JComboBox<String> SearchMobile;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
